version: "3"

networks:
  brand_network:
    driver: bridge

services:
  mongo:
    image: mongo:4.0
    container_name: brand-mongo-container
    volumes:
      - ./brand-report-backend/docker/mongo/db/:/data/db/
    restart: always
    ports:
      - 27019:27017
    networks:
      - brand_network
  redis:
    image: redis:latest
    container_name: brand-redis-container
    volumes:
      - ./CNCommentFront/docker/data:/data
    restart: always
    command: redis-server --requirepass 123456
    ports:
      - 6379:6379
    networks:
      - brand_network
  mysql:
    image: mysql:5.7
    container_name: brand-mysql-container
    restart: always
    volumes:
      - ./corpus-label-system/docker/mysql/data:/var/lib/mysql
      - ./corpus-label-system/docker/mysql/conf:/etc/mysql/conf.d
      - ./corpus-label-system/docker/mysql/backup:/docker-entrypoint-initdb.d
    command: mysqld --user=root
    environment:
      MYSQL_ROOT_PASSWORD: ibm198720 #root管理员用户密码
    ports:
      - 3307:3306
    networks:
      - brand_network
  brand-report-backend:
    container_name: brand-report-backend-container
    build: ./brand-report-backend/docker/backend/
    volumes:
      - ./brand-report-backend/docker/backend/logs:/var/lib/message/brand-report-backend
      - ./brand-report-backend/docker/backend/data:/data
    restart: always
    environment:
      BRAND_FILE: /data/brand.json
      INDEX_FILE: /data/index.json
      COLLECTION_FILE: /data/collection.json
    ports:
      - 8080:8080
    depends_on:
      - mongo
      - word-mouth-front
    networks:
      - brand_network
  brand-user-authorization-backend:
    build: ./brand-user-authorization-backend/docker/backend/
    container_name: brand-user-authorization-backend-container
    volumes:
      - ./brand-user-authorization-backend/docker/backend/data:/data
    restart: always
    ports:
      - 8085:8081
    depends_on:
      - brand-report-backend
    networks:
      - brand_network
  brand-questionniare:
    build: ./BrandAnalysis-Questionnaire/docker
    container_name: brand-questionniare-container
    volumes:
      - ./BrandAnalysis-Questionnaire:/BrandAnalysis-Questionnaire
    restart: always
    command: bash ./docker/docker-start.sh
    ports:
      - 8087:8000
    depends_on:
      - brand-user-authorization-backend
    networks:
      - brand_network
  word-mouth-front:
    build: ./CNCommentFront/docker
    container_name: word-mouth-front-container
    volumes:
      - ./CNCommentFront:/app/CNCommentFront
    restart: always
    ports:
      - 5000:5000
      - 5002:5002
    depends_on:
      - redis
    networks:
      - brand_network
  corpus-label-system:
    build: ./corpus-label-system/docker
    container_name: brand-corpus-label-system
#    volumes:
#      - ./corpus-label-system:/app/corpus-label-system
    restart: always
    ports:
      - 5001:5001
    depends_on:
      - mysql
    networks:
      - brand_network
  brand-report-web:
    build: ./brand-report-web/docker
    ports:
      - 10080:10080
    depends_on:
      - brand-report-backend
    networks:
      - brand_network
